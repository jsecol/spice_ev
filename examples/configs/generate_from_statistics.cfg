# call generate script with --help option to see all options
# call generate script with --config option to use this file:
# python generate.py --config examples/configs/generate_from_statistics.cfg

mode = statistics

# set output file
output = examples/scenario.json
# set vehicle types file
vehicle_types = examples/data/vehicle_types.json
# set random seed (for always random: set seed = null)
seed = 1


# set number of vehicles per vehicle type (default: 1 golf, 1 sprinter)
vehicles = [[1, "golf"], [1, "sprinter"]]
# set start time of simulation in ISO format like YYYY-MM-DDTHH:MM
start_time = 2023-01-01T00:00
# set number of days for simulation (default: 7)
days = 7
# set length of timestep in minutes (default: 15 minute intervals)
interval = 15
# specify dates in ISO format of no driving
holidays = ["2023-01-01"]
# set minimum allowed state of charge when leaving (default: 0.8)
min_soc = 0.8
# set buffer on top of needed SoC for next trip (default: 10%)
buffer = 0.1
# set possible power at grid connection point in kW
gc_power = 100
# set voltage level for cost calculation (possible voltage levels: HV, HV/MV, MV, MV/LV, LV)
voltage_level = MV
# set nominal power of photovoltaic power plant in kW (for feed-in remuneration in cost calculation)
pv_power = 10
# set minimal power at charging station in kW (default: 10 % of installed power of CS)
cs_power_min = 0


# set stationary batteries [capacity, C-Rate]
# battery with capacity = 350 kWh and C-Rate = 0.5
battery = [[350, 0.5]]
# 2 batteries with capacity = 50 kWh, C-Rate = 0.5)
#battery = [[50, 0.5], [50 , 0.5]]
# unlimited battery capacity with constant (dis)charge of 50 kWh
#battery = [[-1, 50]]


# set CSV-files
# fixed load timeseries (in this example in same directory as resulting json)
include_fixed_load_csv = load.csv
# options for fixed load CSV:
# set CSV column name, timestep duration in sec. (example: 10 min) and factor (example: input in W)
include_fixed_load_csv_option = [["column", "value"], ["step_duration_s", 600], ["factor", 0.001]]

# local generation timeseries (in this example in subdirectory "timeseries" - relative to resulting json)
include_local_generation_csv = timeseries/local_generation.csv
# options for local generation CSV:
# set CSV column name, timestep duration in sec. (example: 1 hour) and factor (example: input in kW)
include_local_generation_csv_option = [["column", "value"], ["step_duration_s", 3600], ["factor", 1]]

# energy price timeseries in EUR/kWh (in this example in parent directory - relative to resulting json)
include_price_csv = ../energy_price.csv
# options for price CSV: set CSV column name and timestep duration in sec. (example: 6 hours)
include_price_csv_option = [["column", "value"], ["step_duration_s", 21600]]

# for more options, see https://github.com/rl-institut/spice_ev/wiki/Command-line-options#csv-file-options
