# call generate script with --help option to see all options
# call generate script with --config option to use this file:
# python generate.py --config examples/configs/generate_from_simbev.cfg

mode = simbev

# set output file
output = examples/scenario.json

# directory of simbev result
simbev = examples/example_simbev_run
# region name, if only one region should be run
region = region_1
# interval from SimBEV in minutes
interval = 15
# minimum allowed state of charge when leaving
min_soc = 0.8
# warn when input csv contains/creates SoC below this threshold
min_soc_threshold = 0.05
# set possible power at grid connection point in kW
gc_power = 100
# set voltage level for cost calculation (possible voltage levels: HV, HV/MV, MV, MV/LV, LV)
voltage_level = MV
# set nominal power of photovoltaic power plant in kW (for feed-in remuneration in cost calculation)
pv_power = 10
# set minimal power at charging station in kW (default: 10 % of installed power of CS)
cs_power_min = 0
# set random seed for price generation (seed = null means always random)
seed = 1

# set vehicle types file
# Vehicle data from SimBEV run data gets parsed automatically.
# This parameter only exists to allow v2g functionality or to adjust charging parameters.
# vehicle_types = examples/data/vehicle_types_simbev.json


# set stationary batteries [capacity, C-Rate]
# battery with capacity = 75 kWh and C-Rate = 0.5
#battery = [[50, 1]]
# 2 batteries with capacity = 50 kWh, C-Rate = 1)
#battery = [[50, 1], [50 , 1]]
# unlimited battery capacity with constant (dis)charge of 50 kWh
#battery = [[-1, 50]]


# set CSV-files
# fixed load timeseries (in this example in same directory as resulting json)
include_fixed_load_csv = load.csv
# options for fixed load CSV:
# set CSV column name, timestep duration in sec. (example: 10 min) and factor (example: input in W)
include_fixed_load_csv_option = [["column", "value"], ["step_duration_s", 600], ["factor", 0.001]]

# local generation timeseries (in this example in subdirectory "timeseries" - relative to resulting json)
#include_local_generation_csv = timeseries/local_generation.csv
# options for local_generation CSV:
# set CSV column name, timestep duration in sec. (example: 1 hour) and factor (example: input in kW)
#include_local_generation_csv_option = [["column", "value"], ["step_duration_s", 3600], ["factor", 1]]

# energy price timeseries in EUR/kWh (in this example in parent directory - relative to resulting json)
#include_price_csv = ../energy_price.csv
# options for price CSV: set CSV column name and timestep duration in sec. (example: 6 hours)
#include_price_csv_option = [["column", "value"], ["step_duration_s", 21600]]
